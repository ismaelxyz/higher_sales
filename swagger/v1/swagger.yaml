---
openapi: 3.0.1
info:
  title: Higher Sales API
  version: v1
  description: |
    REST API for managing categories, purchases, reports and authentication.

    Authentication uses JWT (Bearer token). Obtain a token via POST /auth/login and send it as:

    Authorization: Bearer <token>
paths:
  "/auth/login":
    post:
      summary: Authenticate admin and get JWT
      tags:
      - Auth
      parameters: []
      responses:
        '200':
          description: authenticated
        '401':
          description: invalid credentials
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
              required:
              - email
              - password
  "/categories":
    get:
      summary: List categories
      tags:
      - Categories
      responses:
        '200':
          description: ok
    post:
      summary: Create category
      tags:
      - Categories
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '201':
          description: created
        '401':
          description: unauthorized
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
              required:
              - name
  "/categories/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: integer
    get:
      summary: Show category
      tags:
      - Categories
      responses:
        '200':
          description: ok
    put:
      summary: Update category
      tags:
      - Categories
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '200':
          description: updated
        '401':
          description: unauthorized
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
    delete:
      summary: Delete category
      tags:
      - Categories
      security:
      - bearerAuth: []
      responses:
        '204':
          description: deleted
        '401':
          description: unauthorized
  "/purchases":
    get:
      summary: List purchases
      tags:
      - Purchases
      security:
      - bearerAuth: []
      parameters:
      - name: from
        in: query
        schema:
          type: string
          format: date
      - name: to
        in: query
        schema:
          type: string
          format: date
      - name: category_id
        in: query
        schema:
          type: integer
      - name: client_id
        in: query
        schema:
          type: integer
      - name: admin_id
        in: query
        schema:
          type: integer
      - name: page
        in: query
        schema:
          type: integer
          minimum: 1
      - name: per_page
        in: query
        schema:
          type: integer
          minimum: 1
          maximum: 50
      - name: include_products
        in: query
        schema:
          type: boolean
      - name: include_categories
        in: query
        schema:
          type: boolean
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                  _metadata:
                    type: object
                    properties:
                      page:
                        type: integer
                      per_page:
                        type: integer
                      total:
                        type: integer
                      total_pages:
                        type: integer
        '401':
          description: unauthorized
  "/purchases/counts":
    get:
      summary: Counts of purchases grouped by time bucket
      tags:
      - Purchases
      security:
      - bearerAuth: []
      parameters:
      - name: granularity
        in: query
        required: true
        schema:
          type: string
          enum:
          - hour
          - day
          - week
          - year
      - name: from
        in: query
        schema:
          type: string
          format: date
      - name: to
        in: query
        schema:
          type: string
          format: date
      - name: category_id
        in: query
        schema:
          type: integer
      - name: client_id
        in: query
        schema:
          type: integer
      - name: admin_id
        in: query
        schema:
          type: integer
      responses:
        '200':
          description: ok
        '422':
          description: invalid granularity
        '401':
          description: unauthorized
  "/reports/top-products-by-category":
    get:
      summary: Top products by category
      tags:
      - Reports
      security:
      - bearerAuth: []
      parameters:
      - name: limit
        in: query
        schema:
          type: integer
          minimum: 1
      responses:
        '200':
          description: ok
        '401':
          description: unauthorized
  "/reports/top-revenue-products-by-category":
    get:
      summary: Top revenue products by category
      tags:
      - Reports
      security:
      - bearerAuth: []
      parameters:
      - name: limit
        in: query
        schema:
          type: integer
          minimum: 1
      responses:
        '200':
          description: ok
        '401':
          description: unauthorized
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
- bearerAuth: []
servers:
- url: https://api.example.com
  description: Production
- url: http://localhost:3000
  description: Development
